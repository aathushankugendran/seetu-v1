service: seetu-waitlist-api

frameworkVersion: '3'

provider:
  name: aws
  runtime: nodejs20.x
  stage: ${opt:stage, 'dev'}
  region: ${opt:region, 'us-east-1'}
  timeout: 30
  memorySize: 256
  environment:
    WAITLIST_TABLE: ${self:service}-waitlist-signups-${self:provider.stage}
    REGION: ${self:provider.region}
    NODE_ENV: ${self:provider.stage}
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:PutItem
        - dynamodb:GetItem
        - dynamodb:Query
        - dynamodb:Scan
      Resource:
        - 'arn:aws:dynamodb:${self:provider.region}:*:table/${self:provider.environment.WAITLIST_TABLE}'
        - 'arn:aws:dynamodb:${self:provider.region}:*:table/${self:provider.environment.WAITLIST_TABLE}/index/*'

functions:
  submitWaitlist:
    handler: src/handlers/waitlist.submitWaitlist
    events:
      - http:
          path: /waitlist
          method: post
          cors:
            origin: '*'
            headers:
              - Content-Type
              - X-Amz-Date
              - Authorization
              - X-Api-Key
              - X-Amz-Security-Token
              - X-Amz-User-Agent
            allowCredentials: false
    environment:
      WAITLIST_TABLE: ${self:provider.environment.WAITLIST_TABLE}
    package:
      patterns:
        - 'src/handlers/**'
        - 'node_modules/@aws-sdk/**'
        - 'node_modules/uuid/**'

  getWaitlistStats:
    handler: src/handlers/waitlist.getWaitlistStats
    events:
      - http:
          path: /waitlist/stats
          method: get
          cors:
            origin: '*'
            headers:
              - Content-Type
              - X-Amz-Date
              - Authorization
              - X-Api-Key
              - X-Amz-Security-Token
              - X-Amz-User-Agent
            allowCredentials: false
    environment:
      WAITLIST_TABLE: ${self:provider.environment.WAITLIST_TABLE}
    package:
      patterns:
        - 'src/handlers/**'
        - 'node_modules/@aws-sdk/**'
        - 'node_modules/uuid/**'

resources:
  Resources:
    WaitlistSignupsTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:provider.environment.WAITLIST_TABLE}
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
          - AttributeName: createdAt
            AttributeType: S
          - AttributeName: email
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST
        SSESpecification:
          SSEEnabled: true
        PointInTimeRecoverySpecification:
          PointInTimeRecoveryEnabled: true
        GlobalSecondaryIndexes:
          - IndexName: createdAt-index
            KeySchema:
              - AttributeName: createdAt
                KeyType: HASH
            Projection:
              ProjectionType: ALL
          - IndexName: email-index
            KeySchema:
              - AttributeName: email
                KeyType: HASH
            Projection:
              ProjectionType: ALL
        Tags:
          - Key: Environment
            Value: ${self:provider.stage}
          - Key: Service
            Value: ${self:service}

plugins:
  - serverless-offline

custom:
  serverless-offline:
    httpPort: 3000
    host: 0.0.0.0
